
2. Prometheus Installation & Configuration on Linux Machine :
==============================================================
1. Prometheus Server Setup :
============================
Introduction:
=============
. Prometheus is an open source time series monitoring tool for managing a variety of system resources and applications. 
. It provides a multidimensional data model, the ability to query the collected data, and detailed reporting and data visualization through Grafana.
. Prometheus is enabled to collect metrics on the server where it is installed. 
. With the help of node exporters, metrics can be collected from other resources like web servers, containers, databases, 
  custom applications, and other third-party systems. 
. In this tutorial, we will show you how to install and configure Prometheus with node exporters on a Lightsail instance. 

-------------------------------------------------------------------------------------------------------------------------------------------

Step 1: Complete the prerequisites:
====================================

1. Ensure that you have sudo access to the Linux server because the commands used in this guide require elevated privileges.
2. The server has access to the internet for downloading the Prometheus binary.
3. Most importantly, firewall rules opened for accessing Prometheus port 9090 on the server.

-------------------------------------------------------------------------------------------------------------------------------------------

Step 2: Setup Prometheus Binaries :
=====================================

1. Update the yum package repositories.

# sudo yum update -y

2. Go to the official Prometheus downloads page and get the latest download link for the Linux binary.

# wget https://github.com/prometheus/prometheus/releases/download/v2.42.0/prometheus-2.42.0.linux-amd64.tar.gz

3. Download the source using curl, untar it, and rename the extracted folder to prometheus-files.

# tar -xvf prometheus-2.42.0.linux-amd64.tar.gz
# mv prometheus-2.42.0.linux-amd64 prometheus-files

4. Create a Prometheus user, required directories, and make Prometheus the user as the owner of those directories.

#  sudo useradd --no-create-home --shell /bin/false prometheus
#  sudo mkdir /etc/prometheus
#  sudo mkdir /var/lib/prometheus
#  sudo chown prometheus:prometheus /etc/prometheus
#  sudo chown prometheus:prometheus /var/lib/prometheus

5. Copy prometheus and promtool binary from prometheus-files folder to /usr/local/bin and change the ownership to prometheus user.

#  sudo cp prometheus-files/prometheus /usr/local/bin/
#  sudo cp prometheus-files/promtool /usr/local/bin/
#  sudo chown prometheus:prometheus /usr/local/bin/prometheus
#  sudo chown prometheus:prometheus /usr/local/bin/promtool

6. Move the consoles and console_libraries directories from prometheus-files to /etc/prometheus folder and change the ownership 
   to prometheus user.

#  sudo cp -r prometheus-files/consoles /etc/prometheus
#  sudo cp -r prometheus-files/console_libraries /etc/prometheus
#  sudo chown -R prometheus:prometheus /etc/prometheus/consoles
#  sudo chown -R prometheus:prometheus /etc/prometheus/console_libraries

-------------------------------------------------------------------------------------------------------------------------------------------------------------------


Step 3:  Setup Prometheus Configuration:
==========================================
. All the prometheus configurations should be present in /etc/prometheus/prometheus.yml file.

1. Create the prometheus.yml file.

# sudo vi /etc/prometheus/prometheus.yml

2. Copy the following contents to the prometheus.yml file.

global:
  scrape_interval: 10s

scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']

3. Step 3: Change the ownership of the file to prometheus user.

#  sudo chown prometheus:prometheus /etc/prometheus/prometheus.yml


------------------------------------------------------------------------------------------------------------------------------------------

Step 4: Setup Prometheus Service File.
=======================================
1. Create a prometheus service file.

# sudo vi /etc/systemd/system/prometheus.service

2. Copy the following content to the file.

[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
Type=simple
ExecStart=/usr/local/bin/prometheus \
    --config.file /etc/prometheus/prometheus.yml \
    --storage.tsdb.path /var/lib/prometheus/ \
    --web.console.templates=/etc/prometheus/consoles \
    --web.console.libraries=/etc/prometheus/console_libraries

[Install]
WantedBy=multi-user.target


3. Reload the systemd service to register the prometheus service and start the prometheus service.

#  sudo systemctl daemon-reload
#  sudo systemctl start prometheus

4. Check the prometheus service status using the following command.

#  sudo systemctl status prometheus

5. Access Prometheus Web UI.

.Now you will be able to access the prometheus UI on 9090 port of the prometheus server.

#  http://<prometheus-ip>:9090/graph

. You can use the prometheus query tab to query the available metrics.


. Right now, we have just configured the Prometheus server. You need to register the target in the prometheus.yml file to get 
  the metrics from the source systems
. For example, if you want to monitor ten servers, the IP address of these servers should be added as a target in the Prometheus 
  configuration to scrape the metrics.
. The server should have Node Exporter installed to collect all the system metrics and make it available for Prometheus to scrap it.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. How To Monitor Linux Servers Using Prometheus Node Exporter:
================================================================
. Node exporter is the best way to collect all the Linux server related metrics and statistics for monitoring.



Step 1: Prerequisites:
=======================

1. Prometheus Node Exporter needs Prometheus server to be up and running. 
2. If you would like to setup Prometheus, please see the Prometheus setup guide for Linux.
3. Port 9100 opened in server firewall as Prometheus reads metrics on this port.

------------------------------------------------------------------------------------------------------------------------------------------

Step 2: Setup Node Exporter Binary.
====================================

1. Download the latest node exporter package. You should check the Prometheus downloads section for the latest version and
   update this command to get that package.

# cd /tmp
# curl -LO https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz


2. Unpack the tarball

# tar -xvf node_exporter-0.18.1.linux-amd64.tar.gz


3. Move the node export binary to /usr/local/bin

# sudo mv node_exporter-0.18.1.linux-amd64/node_exporter /usr/local/bin/


-----------------------------------------------------------------------------------------------------------------------------------------

Step 3: Create a Custom Node Exporter Service
==============================================

1. Create a node_exporter user to run the node exporter service.

#  sudo useradd -rs /bin/false node_exporter

2. Create a node_exporter service file under systemd.

#  sudo vi /etc/systemd/system/node_exporter.service

3. Add the following service file content to the service file and save it.

[Unit]
Description=Node Exporter
After=network.target

[Service]
User=node_exporter
Group=node_exporter
Type=simple
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target


4. Reload the system daemon and star the node exporter service.

# sudo systemctl daemon-reload
# sudo systemctl start node_exporter

5. check the node exporter status to make sure it is running in the active state.

# sudo systemctl status node_exporter

6. Enable the node exporter service to the system startup.

# sudo systemctl enable node_exporter


. Now, node exporter would be exporting metrics on port 9100. 

. You can see all the server metrics by visiting your server URL on /metrics as shown below.

#  http://<server-IP>:9100/metrics
----------------------------------------------------------------------------------------------------------------------------------------------------

3. Configure the Server as Target on Prometheus Server
==========================================================
. Now that we have the node exporter up and running on the server, we have to add this server a target on the Prometheus server configuration.
. Note: This configuration should be done on the Prometheus server.

1. Login to the Prometheus server and open the prometheus.yml file.

# sudo vi /etc/prometheus/prometheus.yml

2. Under the scrape config section add the node exporter target as shown below. Change 10.142.0.3 
   with your server IP where you have setup node exporter. Job name can be your server hostname 
   or IP for identification purposes.


- job_name: 'node_exporter_metrics'
  scrape_interval: 5s
  static_configs:
    - targets: ['10.142.0.3:9100']
	
	
3. Restart the prometheus service for the configuration changes to take place.

# sudo systemctl restart prometheus

4. Now, if you check the target in prometheus web UI (http://<prometheus-IP>:9090/targets) , 
   you will be able to see the status as shown below.

5. also, you can use the Prometheus expression browser to query for node related metrics. 
   Following are the few key node metrics you can use to find its statistics

node_memory_MemFree_bytes
node_cpu_seconds_total
node_filesystem_avail_bytes
rate(node_cpu_seconds_total{mode="system"}[1m]) 
rate(node_network_receive_bytes_total[1m])






