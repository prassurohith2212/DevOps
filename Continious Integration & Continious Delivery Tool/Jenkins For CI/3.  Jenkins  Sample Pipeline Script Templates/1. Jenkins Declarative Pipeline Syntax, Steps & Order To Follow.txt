
1. Pipeline Declaration:
=========================



pipeline {


---------------------------------------------------------------------------------------------------------------------------------------------------------
2. Agent Declaration Where Build can Run:
============================================

agent {
       node {
         label "MAVEN"
            }      
      }

------------------------------------------------------------------------------------------------------------------------------------------------------
3. Declare Environment variables of a GlobalTools Installed in Jenkins:
========================================================================


environment{
PATH = "$PATH:/opt/mvn/apache-maven"    
}


------------------------------------------------------------------------------------------------------------------------------------------------------
4. Global tools installed on Jenkins to use for this pipeline:
===============================================================

tools {
     maven 'Maven 3.1'
	 jdk   'java11'

}

-----------------------------------------------------------------------------------------------------------------------------------------------------

5.parameters:
================



-----------------------------------------------------------------------------------------------------------------------------------------------------
6. Stages:
===========


stages {



-----------------------------------------------------------------------------------------------------------------------------------------------------

7. Stage to get Source Code from GitHub:
========================================

        stage('Get Code From GitHub') {                                                
            steps {
                echo '<--------------- Getting Code From GitHub--------------->'
              
			    git branch: 'main', credentialsId: '57c0ce68-28eb-4a5b-8ea5-bdabab415bb8', url: 'https://github.com/prassurohith/TaxiBooking.git'
			    
                echo '<------------- Getting Code From GitHub completed --------------->'
                  }
                                       }

--------------------------------------------------------------------------------------------------------------------------------------------------------

8. Stage to Build & Compile Source code:
=========================================

        stage('Build & Compile Source Code') {
            steps {
                echo '<--------------- Build & Compile Source Code --------------->'
              
			     sh  'mvn clean install'
			    
                echo '<--------------- Build & Compile Source Code Completed --------------->'
                  }
                                       }	

-------------------------------------------------------------------------------------------------------------------------------------------------------

9. Stage to Sonarqube Analysis:
==================================


        stage('SonarQube Analysis'){                                                                      
            steps{
                echo '<--------------- Static Code Analysis with SonarQube --------------->'
                 script{
			     withSonarQubeEnv(credentialsId: 'sonarqube-token')  {
                  sh 'mvn clean package  sonar:sonar'
                         }                                          
				                                                            }
                echo '<--------------- Static Code Analysis with SonarQube Completed--------------->'
                  }
                                       }

------------------------------------------------------------------------------------------------------------------------------------------------------

10. Stage for SonarQube Quality check Gate Control:
====================================================


        stage('Sonar Quality Gate '){                                                                      
            steps{
                echo '<--------------- Quality Gate Analysis with SonarQube --------------->'
                 script{
			     "waitForQualityGate abortPipeline: false, credentialsId: 'sonarqube-token'"
                         }                                          
				                                                            
                echo '<--------------- Quality Gate Analysis with SonarQube Completed--------------->'
                  }
                                       }	


------------------------------------------------------------------------------------------------------------------------------------------------------

11. Stage for Artifactory Upload to Artifactory Nexus:
=======================================================


        stage('Upload Artifact to Artifact Repository'){                                                                      
            steps{
                echo '<---------------Upload Artifact to Artifact Repository Started --------------->'
                 script{
				 
				 def readPomVersion = readMavenPom file: 'pom.xml'
				 
				 def nexusRepo = readPomVersion.version.endsWith("SNAPSHOT") ? "My_Maven_Snapshot_Hosted_Repository" : "My_Maven_Release_Hosted_Repository"
				 
                 nexusArtifactUploader artifacts: [[artifactId: 'TaxiBooking', classifier: '', file: 'target/TaxiBooking.war', type: 'war']], credentialsId: 'Nexus Artifactory', groupId: 'com.example.maven-project', nexusUrl: '10.0.1.14:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'My_Maven_Release_Hosted_Repository', version: "${readPomVersion.version}"

                       }                                          
				                                                            
                echo '<--------------- Upload Artifact to Artifact Repository  Completed--------------->'
                  }
                                       }		

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

12. Stage for Building Docker Image:
======================================


        stage('Docker Image Build'){                                                                      
            steps{
                echo '<---------------Docker Image Build  Started --------------->'
                 script{
				 
				    sh 'docker image build -t $JOB_NAME:v1.$BUILD_ID'
				    sh 'docker image tag $JOB_NAME:v1.$BUILD_ID  prassurohith/$JOB_NAME:v1.$BUILD_ID'
					sh 'docker image tag $JOB_NAME:v1.$BUILD_ID  prassurohith/$JOB_NAME:latest'
                       }                                          
				                                                            
                echo '<---------------Docker Image Build  Completed--------------->'
                  }
                                       }	


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

13. Stage for Pushing Docker Image to Docker Hub:
===================================================


        stage('Push Docker Image To Docker Hub'){                                                                      
            steps{
                echo '<---------------Push Docker Image To Docker Hub  Started --------------->'
                 script{
				     
					 withCredentials({[string(credentialsId: 'dockerhub_pwd', variable: 'docker_hub_cred')])
				 
				    sh 'docker login -u prassurohith9999@gmail.com -p ${docker_hub_cred}'
				    sh 'docker image push prassurohith9999/$JOB_NAME:v1.$BUILD_ID
					sh 'docker image push  prassurohith/$JOB_NAME:latest'
                       }                                          
				                                                            
                echo '<---------------Push Docker Image To Docker Hub  Completed--------------->'
                  }
                                       }									   
									   
        }
}


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

