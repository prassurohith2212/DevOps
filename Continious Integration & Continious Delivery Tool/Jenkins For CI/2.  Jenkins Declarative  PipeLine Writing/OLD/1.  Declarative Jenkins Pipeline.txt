
JENKINS PIPELINE:
===================

1. What is Jenkins Pipeline?
===============================
. Jenkins Pipeline is a suite of plugins which supports implementing and integrating continious delivary pipelines into.
. Jenkins Pipeline Provides an extensible set of tools for modeling simple-to-complex delivary pipelines as code.
. This "Pipeline as Code" is written in a file known as "Jenkinsfile" and checked into a project's source code repository.


------------------------------------------------------------------------------------------------------------------------------------------------------

2. Pipeline  can be created in one of the following ways:
==========================================================

Through Blue Ocean:
--------------------
. After setting up a pipeline project in BlueOcean, the blue Ocean UI helps you write your Pipeline's jenkinsFile and commit it to source control.

Through the Classic UI:
-------------------------
. You can enter a basic Pipeline directly in jenkins through the classic UI.

In SCM:
---------
. You can write a jenkinsfile manually, which can commit to your project's source control repository.

 
 
--------------------------------------------------------------------------------------------------------------------------------------------------------

3. Why Jenkins Pipeline Needed:
=================================
Code: 
-----
Pipelines are implemented in code and typically checked into source control, giving teams the ability to edit, review, and iterate upon their delivary pipeline.

Pausable:
----------
Pipelines can optionally stop and wait for human input or approval before continiouing the pipeline run.

Versatile:
------------
pipelines support complex real-wprld continious delivary requirements, including the ability to fork/join, loop, and perform work in parallel.

Extensible:
------------
The pipeline plugin supports custom extensions to its DSL.

-------------------------------------------------------------------------------------------------------------------------------------------------------

4. Pipeline Terminology:
=========================
Step:
-----
- A Step is a single task which basically tells jenkins what to do.
- For example any linux command we can use sh step.

Node:
------
- Pipeline performs all the steps on a specific declared node.
- it allocates an executor and workspace for the execution of pipeline.

Stage:
-------
- A stage is basically defining a concepttually distinct subset of the entire pipeline.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

5. Declarative Pipeline:
========================
- Declarative Pipeline is a relatively recent addiction to jenkins pipeline which is more simplified on the top of the pipeline sub systems.
- All alid Declarative Pipelines must be enclosed within a pipeline block, fpor example.


pipeline {

/* insert Declarative Pipeline Here */
}

- Declarative pipeline follow the same groovy syntax with the below exceptions:
. The top-level of the pipeline must be a block, specifically pipeline{}
. Each statement must be in a seperate line.
. Block must only consist of Sections, Directives, Steps or Assignment Statements.


-------------------------------------------------------------------------------------------------------------------------------------------------------

6. Sections:
==============
- Sections in Declarative pipeline typically contain one or more Directives or Steps.

PostSection:
------------
- The post section defines actions which will be run at the end of the pipelinerun.
- it also supports the conditions. Supported conditions are always, changed, failure, success, unstable.

Stages Section:
---------------
- A sequence of one or more stage directives, the stages section is where the bulk of the "work" described by a pipeline will be located.
- At a minimum it is recommended that stages contain at least one stage directive for each discreate part of the continious delivary process,
  Such as Build, Test,

Steps Section:
---------------
- Defines a series of steps to be exected in a given stage directive.

-----------------------------------------------------------------------------------------------------------------------------------------------------

7. Directives:
--------------
- Directives in Declarative pipeline typically contain one or more steps.

Agent Directive:
----------------

Environment Directive:
-----------------------

Optional Directive:
-------------------

parameter Directive:
----------------------

Triggers Directive:
-------------------

Stage Directive:
-----------------


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

